server:
  port: 8706
#setting
spring:
  application:
    name: gateway-new
  #redis
  redis:
    host: localhost
    port: 6379
    database: 0
    timeout: 5000
  #遇到相同名字，允许覆盖
  main:
    allow-bean-definition-overriding: true
  #gateway
  cloud:
    gateway:
      #注册中心服务发现
      discovery:
        locator:
          #开启通过服务中心的自动根据 serviceId 创建路由的功能
          enabled: true
      routes:
        #服务1
        - id: CompositeDiscoveryClient_CUSTOMER
          uri: lb://CUSTOMER
          order: 1
          predicates:
            # 跳过自定义是直接带实例名 必须是大写 同样限流拦截失效
            - Path= /api/customer/**
          filters:
            - StripPrefix=2
            - AddResponseHeader=X-Response-Default-Foo, Default-Bar
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@remoteAddrKeyResolver}"
                #限额配置
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
        #用户微服务
        - id: CompositeDiscoveryClient_PRODUCT
          uri: lb://PRODUCT
          order: 0
          predicates:
            - Path= /api/product/**
          filters:
            - StripPrefix=2
            - AddResponseHeader=X-Response-Default-Foo, Default-Bar
            - name: RequestRateLimiter
              args:
                key-resolver: "#{@remoteAddrKeyResolver}"
                #限额配置
                redis-rate-limiter.replenishRate: 1
                redis-rate-limiter.burstCapacity: 1
          #请求路径选择自定义会进入限流器
          default-filters:
            - AddResponseHeader=X-Response-Default-Foo, Default-Bar
            - name: remoteAddrKeyResolver
              args:
                key-resolver: "#{@remoteAddrKeyResolver}"
              #断路异常跳转
            - name: Hystrix
              args:
                #网关异常或超时跳转到处理类
                name: fallbackcmd
                fallbackUri: forward:/fallbackController

#safe path
auth-skip:
  instance-servers:
    - CUSTOMER
    - PRODUCT
  api-urls:
    #PRODUCT
    - /pro
    #CUSTOMER
    - /cust

    #gray-env
    #...

#log
logging:
  level:
    org.yugh: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.http.server.reactive: INFO
    org.springframework.web.reactive: INFO
    reactor.ipc.netty: INFO

#reg
eureka:
  instance:
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8700/eureka/


ribbon:
  eureka:
    enabled: true
  ReadTimeout: 120000
  ConnectTimeout: 30000


#feign
feign:
  hystrix:
    enabled: false

#hystrix
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 20000