#port
server:
  port: 6300
#setting
spring:
  application:
    name: dataworks-gateway-service
  #redis
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
  #overriding name
  main:
    allow-bean-definition-overriding: true
  #gateway
  cloud:
    gateway:
      #open service
      discovery:
        locator:
          #serviceId routes
          enabled: true
      routes:
        #habo
        - id: CompositeDiscoveryClient_APP-HABO-SERVICE
          uri: lb://APP-HABO-SERVICE
          order: 1
          predicates:
            - Path= /api/habo/**
          filters:
            - StripPrefix=2
            # see {@link GatewayCorsConfig} and {@link CorsFilter}
            - name: RequestRateLimiter
              args:
                # X-RateLimit-Remaining -> Token bucket, Current Remaining = burstCapacity-replenishRate
                # See {@link GatewayKeyResolver}
                key-resolver: "#{@gatewayKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 10
        #datasource
        - id: CompositeDiscoveryClient_METADATA-DATASOURCE-SERVICE
          uri: lb://METADATA-DATASOURCE-SERVICE
          order: 1
          predicates:
            - Path= /api/datasource/**
          filters:
            - StripPrefix=2
            # see {@link GatewayCorsConfig} and {@link CorsFilter}
            - name: RequestRateLimiter
              args:
                # X-RateLimit-Remaining -> Token bucket, Current Remaining = burstCapacity-replenishRate
                # See {@link GatewayKeyResolver}
                key-resolver: "#{@gatewayKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 10
        #lineage
        - id: CompositeDiscoveryClient_METADATA-DATA-LINEAGE-SERVICE
          uri: lb://METADATA-DATA-LINEAGE-SERVICE
          order: 1
          predicates:
            - Path= /api/lineage/**
          filters:
            - StripPrefix=2
            # see {@link GatewayCorsConfig} and {@link CorsFilter}
            - name: RequestRateLimiter
              args:
                # X-RateLimit-Remaining -> Token bucket, Current Remaining = burstCapacity-replenishRate
                # See {@link GatewayKeyResolver}
                key-resolver: "#{@gatewayKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 10
        #quota
        - id: CompositeDiscoveryClient_METADATA-QUOTA-DICT-SERVICE
          uri: lb://METADATA-QUOTA-DICT-SERVICE
          order: 1
          predicates:
            - Path= /api/quotamanage/**
          filters:
            - StripPrefix=2
            # see {@link GatewayCorsConfig} and {@link CorsFilter}
            - name: RequestRateLimiter
              args:
                # X-RateLimit-Remaining -> Token bucket, Current Remaining = burstCapacity-replenishRate
                # See {@link GatewayKeyResolver}
                key-resolver: "#{@gatewayKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 10
        #table
        - id: CompositeDiscoveryClient_METADATA-TABLE-DICT-SERVICE
          uri: lb://METADATA-TABLE-DICT-SERVICE
          order: 1
          predicates:
            - Path= /api/table/**
          filters:
            - StripPrefix=2
            # see {@link GatewayCorsConfig} and {@link CorsFilter}
            - name: RequestRateLimiter
              args:
                # X-RateLimit-Remaining -> Token bucket, Current Remaining = burstCapacity-replenishRate
                # See {@link GatewayKeyResolver}
                key-resolver: "#{@gatewayKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 10
        #luban-dashboard
        - id: CompositeDiscoveryClient_APP-LUBAN-DASHBOARD-SERVICE
          uri: lb://APP-LUBAN-DASHBOARD-SERVICE
          order: 1
          predicates:
            - Path= /api/luban-dashboard/**
          filters:
            - StripPrefix=2
            # see {@link GatewayCorsConfig} and {@link CorsFilter}
            #- AddResponseHeader=Access-Control-Allow-Credentials,true Access-Control-Allow-Headers,Origin, No-Cache, X-Requested-With, If-Modified-Since, Pragma, Last-Modified, Cache-Control, Expires, Content-Type, X-E4M-With, xx, DEVICEID
            - name: RequestRateLimiter
              args:
                # X-RateLimit-Remaining -> Token bucket, Current Remaining = burstCapacity-replenishRate
                # See {@link GatewayKeyResolver}
                key-resolver: "#{@gatewayKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 10
        #submission
        - id: CompositeDiscoveryClient_BASE-SQL-SUBMISSION-SERVICE
          uri: lb://BASE-SQL-SUBMISSION-SERVICE
          order: 1
          predicates:
            - Path= /api/submission/**
          filters:
            - StripPrefix=2
            # see {@link GatewayCorsConfig} and {@link CorsFilter}
            - name: RequestRateLimiter
              args:
                # X-RateLimit-Remaining -> Token bucket, Current Remaining = burstCapacity-replenishRate
                # See {@link GatewayKeyResolver}
                key-resolver: "#{@gatewayKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 10
        #luban-backend
        - id: CompositeDiscoveryClient_APP-LUBAN-BACKEND-SERVICE
          uri: lb://APP-LUBAN-BACKEND-SERVICE
          order: 1
          predicates:
            - Path= /api/luban-backend/**
          filters:
            - StripPrefix=2
            # see {@link GatewayCorsConfig} and {@link CorsFilter}
            - name: RequestRateLimiter
              args:
                # X-RateLimit-Remaining -> Token bucket, Current Remaining = burstCapacity-replenishRate
                # See {@link GatewayKeyResolver}
                key-resolver: "#{@gatewayKeyResolver}"
                redis-rate-limiter.replenishRate: 2
                redis-rate-limiter.burstCapacity: 10
          #default
          default-filters:
            # see {@link GatewayCorsConfig} and {@link CorsFilter}
            #- AddResponseHeader=Access-Control-Allow-Credentials,true Access-Control-Allow-Headers,Origin, No-Cache, X-Requested-With, If-Modified-Since, Pragma, Last-Modified, Cache-Control, Expires, Content-Type, X-E4M-With, xx, DEVICEID
            - name: gatewayKeyResolver
              args:
                key-resolver: "#{@gatewayKeyResolver}"
            - name: Hystrix
              args:
                name: fallbackcmd
                fallbackUri: forward:/fallbackController

#safe path
auth-skip:
  dataworks-servers:
    - APP-HABO-SERVICE
    - METADATA-DATASOURCE-SERVICE
    - METADATA-DATA-LINEAGE-SERVICE
    - METADATA-QUOTA-DICT-SERVICE
    - METADATA-TABLE-DICT-SERVICE
    - APP-LUBAN-DASHBOARD-SERVICE
    - BASE-SQL-SUBMISSION-SERVICE
    - APP-LUBAN-BACKEND-SERVICE
  api-urls:
    #habo
    - /task/workspace
    - /task/callback
    - /task/exec
    - /task/sch/config
    - /user/group
    - /health
    #usercenter
    #- /usercenter/user
    #- /usercenter/health
    #datasource
    - /query
    - /management
    - /health
    #lineage
    - /blood
    - /test
    - /health
    #quota
    - /callback/dimension
    - /approve/callback
    - /v1
    - /action/indicator
    - /health
    #table
    - /v1/datasource
    - /v1/database
    - /v1/bdptable
    - /health
    #lubanDashboard
    - /v1/chart
    - /v1/dashboard
    - /v1/dashboardShare
    - /health
    #submission
    - /health
    - /v1/metadata
    - /v1/query
    - /v1/sql
    #luban-backend
    - /v1/dataset
    - /v1/datasetsql
    - /v1/datasetshare
    - /health


    #gray-env
    #...

#log
logging:
  level:
    org.yugh.gateway: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.http.server.reactive: INFO
    org.springframework.web.reactive: INFO
    reactor.ipc.netty: INFO

#reg
eureka:
  instance:
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: http://localhost:8700/eureka/

#health
management:
  endpoints:
    web:
      exposure:
        include: '*'
      base-path: /actuator
  endpoint:
    health:
      show-details: ALWAYS

#ribbon
ribbon:
  eureka:
    enabled: true
  ReadTimeout: 120000
  ConnectTimeout: 30000


#feign
feign:
  hystrix:
    enabled: true

#hystrix
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          thread:
            timeoutInMilliseconds: 20000

