[INFO ] 2019-09-04 14:26:09 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [{PostProcessorRegistrationDelegate.java} {330}] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$caf27d3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2019-09-04 14:26:10 [main] org.yugh.zuul.ZuulApplicationTests [{SpringApplication.java} {679}] - The following profiles are active: dev
[INFO ] 2019-09-04 14:26:10 [main] o.s.d.r.c.RepositoryConfigurationDelegate [{RepositoryConfigurationDelegate.java} {244}] - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2019-09-04 14:26:10 [main] o.s.d.r.c.RepositoryConfigurationDelegate [{RepositoryConfigurationDelegate.java} {126}] - Bootstrapping Spring Data repositories in DEFAULT mode.
[INFO ] 2019-09-04 14:26:10 [main] o.s.d.r.c.RepositoryConfigurationDelegate [{RepositoryConfigurationDelegate.java} {182}] - Finished Spring Data repository scanning in 12ms. Found 0 repository interfaces.
[INFO ] 2019-09-04 14:26:10 [main] o.s.cloud.context.scope.GenericScope [{GenericScope.java} {295}] - BeanFactory id=166190fb-8d60-3466-9b2f-745982c99546
[INFO ] 2019-09-04 14:26:10 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [{PostProcessorRegistrationDelegate.java} {330}] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$caf27d3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2019-09-04 14:26:10 [main] org.yugh.zuul.config.RedisClient [{RedisClient.java} {32}] - =============> redis run ............
[INFO ] 2019-09-04 14:26:10 [main] org.yugh.zuul.config.ZuulPropConfig [{ZuulPropConfig.java} {40}] - ============> 配置的白名单Url:[/pro, /cust]
[INFO ] 2019-09-04 14:26:10 [main] c.n.c.sources.URLConfigurationSource [{URLConfigurationSource.java} {126}] - URLs to be used as dynamic configuration source: [file:/Users/yuzhilin/IdeaProjects/open-source/framework-applications/zuul/target/classes/config.properties]
[INFO ] 2019-09-04 14:26:10 [main] c.n.c.sources.URLConfigurationSource [{URLConfigurationSource.java} {126}] - URLs to be used as dynamic configuration source: [file:/Users/yuzhilin/IdeaProjects/open-source/framework-applications/zuul/target/classes/config.properties]
[INFO ] 2019-09-04 14:26:10 [main] o.s.s.c.ThreadPoolTaskExecutor [{ExecutorConfigurationSupport.java} {171}] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2019-09-04 14:26:10 [main] o.s.c.n.zuul.ZuulFilterInitializer [{ZuulFilterInitializer.java} {67}] - Starting filter initializer
[INFO ] 2019-09-04 14:26:10 [main] o.s.b.a.e.web.EndpointLinksResolver [{EndpointLinksResolver.java} {59}] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO ] 2019-09-04 14:26:10 [main] o.s.c.n.eureka.InstanceInfoFactory [{InstanceInfoFactory.java} {72}] - Setting initial instance status as: STARTING
[INFO ] 2019-09-04 14:26:10 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {349}] - Initializing Eureka in region us-east-1
[INFO ] 2019-09-04 14:26:10 [main] c.n.d.p.DiscoveryJerseyProvider [{DiscoveryJerseyProvider.java} {70}] - Using JSON encoding codec LegacyJacksonJson
[INFO ] 2019-09-04 14:26:10 [main] c.n.d.p.DiscoveryJerseyProvider [{DiscoveryJerseyProvider.java} {71}] - Using JSON decoding codec LegacyJacksonJson
[INFO ] 2019-09-04 14:26:10 [main] c.n.d.p.DiscoveryJerseyProvider [{DiscoveryJerseyProvider.java} {80}] - Using XML encoding codec XStreamXml
[INFO ] 2019-09-04 14:26:10 [main] c.n.d.p.DiscoveryJerseyProvider [{DiscoveryJerseyProvider.java} {81}] - Using XML decoding codec XStreamXml
[INFO ] 2019-09-04 14:26:10 [main] c.n.d.s.r.aws.ConfigClusterResolver [{ConfigClusterResolver.java} {43}] - Resolving eureka endpoints via configuration
[INFO ] 2019-09-04 14:26:10 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {958}] - Disable delta property : false
[INFO ] 2019-09-04 14:26:10 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {959}] - Single vip registry refresh property : null
[INFO ] 2019-09-04 14:26:10 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {960}] - Force full registry fetch : false
[INFO ] 2019-09-04 14:26:10 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {961}] - Application is null : false
[INFO ] 2019-09-04 14:26:10 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {962}] - Registered Applications size is zero : true
[INFO ] 2019-09-04 14:26:10 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {964}] - Application version is -1: true
[INFO ] 2019-09-04 14:26:10 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {1047}] - Getting all instance registry info from the eureka server
[INFO ] 2019-09-04 14:26:10 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {1270}] - Starting heartbeat executor: renew interval is: 30
[INFO ] 2019-09-04 14:26:10 [main] c.n.discovery.InstanceInfoReplicator [{InstanceInfoReplicator.java} {60}] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[INFO ] 2019-09-04 14:26:10 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {449}] - Discovery Client initialized at timestamp 1567578376043 with initial instances count: 0
[INFO ] 2019-09-04 14:26:10 [main] org.yugh.zuul.ZuulApplicationTests [{StartupInfoLogger.java} {59}] - Started ZuulApplicationTests in 6.342 seconds (JVM running for 7.1)
[INFO ] 2019-09-04 14:26:10 [main] c.n.config.ChainedDynamicProperty [{ChainedDynamicProperty.java} {115}] - Flipping property: product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO ] 2019-09-04 14:26:10 [main] c.n.u.c.ShutdownEnabledTimer [{ShutdownEnabledTimer.java} {58}] - Shutdown hook installed for: NFLoadBalancer-PingTimer-product
[INFO ] 2019-09-04 14:26:10 [main] c.n.loadbalancer.BaseLoadBalancer [{BaseLoadBalancer.java} {197}] - Client: product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO ] 2019-09-04 14:26:10 [main] c.n.l.DynamicServerListLoadBalancer [{DynamicServerListLoadBalancer.java} {222}] - Using serverListUpdater PollingServerListUpdater
[INFO ] 2019-09-04 14:26:10 [main] c.n.l.DynamicServerListLoadBalancer [{DynamicServerListLoadBalancer.java} {150}] - DynamicServerListLoadBalancer for client product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4790b897
[INFO ] 2019-09-04 14:26:10 [main] c.n.config.ChainedDynamicProperty [{ChainedDynamicProperty.java} {115}] - Flipping property: customer.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO ] 2019-09-04 14:26:10 [main] c.n.u.c.ShutdownEnabledTimer [{ShutdownEnabledTimer.java} {58}] - Shutdown hook installed for: NFLoadBalancer-PingTimer-customer
[INFO ] 2019-09-04 14:26:10 [main] c.n.loadbalancer.BaseLoadBalancer [{BaseLoadBalancer.java} {197}] - Client: customer instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=customer,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO ] 2019-09-04 14:26:10 [main] c.n.l.DynamicServerListLoadBalancer [{DynamicServerListLoadBalancer.java} {222}] - Using serverListUpdater PollingServerListUpdater
[INFO ] 2019-09-04 14:26:10 [main] c.n.l.DynamicServerListLoadBalancer [{DynamicServerListLoadBalancer.java} {150}] - DynamicServerListLoadBalancer for client customer initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=customer,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@56dde9f7
[INFO ] 2019-09-04 14:26:10 [Thread-6] o.s.c.n.e.s.EurekaServiceRegistry [{EurekaServiceRegistry.java} {65}] - Unregistering application ZUUL with eureka with status DOWN
[INFO ] 2019-09-04 14:26:10 [Thread-10] c.n.l.PollingServerListUpdater [{PollingServerListUpdater.java} {53}] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO ] 2019-09-04 14:26:10 [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {826}] - DiscoveryClient_ZUUL/10.45.53.191:zuul:-1: registering service...
[INFO ] 2019-09-04 14:26:10 [Thread-6] o.s.c.n.zuul.ZuulFilterInitializer [{ZuulFilterInitializer.java} {79}] - Stopping filter initializer
[INFO ] 2019-09-04 14:26:10 [Thread-6] c.n.u.c.ShutdownEnabledTimer [{ShutdownEnabledTimer.java} {67}] - Shutdown hook removed for: NFLoadBalancer-PingTimer-product
[INFO ] 2019-09-04 14:26:10 [Thread-6] c.n.u.c.ShutdownEnabledTimer [{ShutdownEnabledTimer.java} {72}] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO ] 2019-09-04 14:26:10 [Thread-6] c.n.u.c.ShutdownEnabledTimer [{ShutdownEnabledTimer.java} {67}] - Shutdown hook removed for: NFLoadBalancer-PingTimer-customer
[INFO ] 2019-09-04 14:26:10 [Thread-6] c.n.u.c.ShutdownEnabledTimer [{ShutdownEnabledTimer.java} {72}] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO ] 2019-09-04 14:26:10 [Thread-6] o.s.s.c.ThreadPoolTaskExecutor [{ExecutorConfigurationSupport.java} {208}] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO ] 2019-09-04 14:26:10 [Thread-6] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {888}] - Shutting down DiscoveryClient ...
[INFO ] 2019-09-04 14:26:10 [Thread-6] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {922}] - Unregistering ...
[INFO ] 2019-09-04 14:26:10 [Thread-6] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {911}] - Completed shut down of DiscoveryClient
[INFO ] 2019-09-04 14:26:35 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [{PostProcessorRegistrationDelegate.java} {330}] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$228a3631] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2019-09-04 14:26:36 [main] org.yugh.zuul.ZuulApplicationTests [{SpringApplication.java} {679}] - The following profiles are active: dev
[INFO ] 2019-09-04 14:26:36 [main] o.s.d.r.c.RepositoryConfigurationDelegate [{RepositoryConfigurationDelegate.java} {244}] - Multiple Spring Data modules found, entering strict repository configuration mode!
[INFO ] 2019-09-04 14:26:36 [main] o.s.d.r.c.RepositoryConfigurationDelegate [{RepositoryConfigurationDelegate.java} {126}] - Bootstrapping Spring Data repositories in DEFAULT mode.
[INFO ] 2019-09-04 14:26:36 [main] o.s.d.r.c.RepositoryConfigurationDelegate [{RepositoryConfigurationDelegate.java} {182}] - Finished Spring Data repository scanning in 12ms. Found 0 repository interfaces.
[INFO ] 2019-09-04 14:26:36 [main] o.s.cloud.context.scope.GenericScope [{GenericScope.java} {295}] - BeanFactory id=8383f81b-2447-3167-a7f9-4178dd138113
[INFO ] 2019-09-04 14:26:36 [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker [{PostProcessorRegistrationDelegate.java} {330}] - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$228a3631] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[INFO ] 2019-09-04 14:26:36 [main] org.yugh.zuul.config.RedisClient [{RedisClient.java} {32}] - =============> redis run ............
[INFO ] 2019-09-04 14:26:36 [main] org.yugh.zuul.config.ZuulPropConfig [{ZuulPropConfig.java} {40}] - ============> 配置的白名单Url:[/pro, /cust]
[INFO ] 2019-09-04 14:26:36 [main] c.n.c.sources.URLConfigurationSource [{URLConfigurationSource.java} {126}] - URLs to be used as dynamic configuration source: [file:/Users/yuzhilin/IdeaProjects/open-source/framework-applications/zuul/target/classes/config.properties]
[INFO ] 2019-09-04 14:26:36 [main] c.n.c.sources.URLConfigurationSource [{URLConfigurationSource.java} {126}] - URLs to be used as dynamic configuration source: [file:/Users/yuzhilin/IdeaProjects/open-source/framework-applications/zuul/target/classes/config.properties]
[INFO ] 2019-09-04 14:26:36 [main] o.s.s.c.ThreadPoolTaskExecutor [{ExecutorConfigurationSupport.java} {171}] - Initializing ExecutorService 'applicationTaskExecutor'
[INFO ] 2019-09-04 14:26:36 [main] o.s.c.n.zuul.ZuulFilterInitializer [{ZuulFilterInitializer.java} {67}] - Starting filter initializer
[INFO ] 2019-09-04 14:26:36 [main] o.s.b.a.e.web.EndpointLinksResolver [{EndpointLinksResolver.java} {59}] - Exposing 2 endpoint(s) beneath base path '/actuator'
[INFO ] 2019-09-04 14:26:36 [main] o.s.c.n.eureka.InstanceInfoFactory [{InstanceInfoFactory.java} {72}] - Setting initial instance status as: STARTING
[INFO ] 2019-09-04 14:26:36 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {349}] - Initializing Eureka in region us-east-1
[INFO ] 2019-09-04 14:26:36 [main] c.n.d.p.DiscoveryJerseyProvider [{DiscoveryJerseyProvider.java} {70}] - Using JSON encoding codec LegacyJacksonJson
[INFO ] 2019-09-04 14:26:36 [main] c.n.d.p.DiscoveryJerseyProvider [{DiscoveryJerseyProvider.java} {71}] - Using JSON decoding codec LegacyJacksonJson
[INFO ] 2019-09-04 14:26:36 [main] c.n.d.p.DiscoveryJerseyProvider [{DiscoveryJerseyProvider.java} {80}] - Using XML encoding codec XStreamXml
[INFO ] 2019-09-04 14:26:36 [main] c.n.d.p.DiscoveryJerseyProvider [{DiscoveryJerseyProvider.java} {81}] - Using XML decoding codec XStreamXml
[INFO ] 2019-09-04 14:26:36 [main] c.n.d.s.r.aws.ConfigClusterResolver [{ConfigClusterResolver.java} {43}] - Resolving eureka endpoints via configuration
[INFO ] 2019-09-04 14:26:36 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {958}] - Disable delta property : false
[INFO ] 2019-09-04 14:26:36 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {959}] - Single vip registry refresh property : null
[INFO ] 2019-09-04 14:26:36 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {960}] - Force full registry fetch : false
[INFO ] 2019-09-04 14:26:36 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {961}] - Application is null : false
[INFO ] 2019-09-04 14:26:36 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {962}] - Registered Applications size is zero : true
[INFO ] 2019-09-04 14:26:36 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {964}] - Application version is -1: true
[INFO ] 2019-09-04 14:26:36 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {1047}] - Getting all instance registry info from the eureka server
[INFO ] 2019-09-04 14:26:36 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {1270}] - Starting heartbeat executor: renew interval is: 30
[INFO ] 2019-09-04 14:26:36 [main] c.n.discovery.InstanceInfoReplicator [{InstanceInfoReplicator.java} {60}] - InstanceInfoReplicator onDemand update allowed rate per min is 4
[INFO ] 2019-09-04 14:26:36 [main] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {449}] - Discovery Client initialized at timestamp 1567578403408 with initial instances count: 0
[INFO ] 2019-09-04 14:26:36 [main] org.yugh.zuul.ZuulApplicationTests [{StartupInfoLogger.java} {59}] - Started ZuulApplicationTests in 8.114 seconds (JVM running for 8.961)
[INFO ] 2019-09-04 14:26:36 [main] c.n.config.ChainedDynamicProperty [{ChainedDynamicProperty.java} {115}] - Flipping property: product.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO ] 2019-09-04 14:26:36 [main] c.n.u.c.ShutdownEnabledTimer [{ShutdownEnabledTimer.java} {58}] - Shutdown hook installed for: NFLoadBalancer-PingTimer-product
[INFO ] 2019-09-04 14:26:36 [main] c.n.loadbalancer.BaseLoadBalancer [{BaseLoadBalancer.java} {197}] - Client: product instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO ] 2019-09-04 14:26:36 [main] c.n.l.DynamicServerListLoadBalancer [{DynamicServerListLoadBalancer.java} {222}] - Using serverListUpdater PollingServerListUpdater
[INFO ] 2019-09-04 14:26:36 [main] c.n.l.DynamicServerListLoadBalancer [{DynamicServerListLoadBalancer.java} {150}] - DynamicServerListLoadBalancer for client product initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=product,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@6785786d
[INFO ] 2019-09-04 14:26:36 [main] c.n.config.ChainedDynamicProperty [{ChainedDynamicProperty.java} {115}] - Flipping property: customer.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
[INFO ] 2019-09-04 14:26:36 [main] c.n.u.c.ShutdownEnabledTimer [{ShutdownEnabledTimer.java} {58}] - Shutdown hook installed for: NFLoadBalancer-PingTimer-customer
[INFO ] 2019-09-04 14:26:36 [main] c.n.loadbalancer.BaseLoadBalancer [{BaseLoadBalancer.java} {197}] - Client: customer instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=customer,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
[INFO ] 2019-09-04 14:26:36 [main] c.n.l.DynamicServerListLoadBalancer [{DynamicServerListLoadBalancer.java} {222}] - Using serverListUpdater PollingServerListUpdater
[INFO ] 2019-09-04 14:26:36 [main] c.n.l.DynamicServerListLoadBalancer [{DynamicServerListLoadBalancer.java} {150}] - DynamicServerListLoadBalancer for client customer initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=customer,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1aea759d
[INFO ] 2019-09-04 14:26:36 [Thread-10] c.n.l.PollingServerListUpdater [{PollingServerListUpdater.java} {53}] - Shutting down the Executor Pool for PollingServerListUpdater
[INFO ] 2019-09-04 14:26:36 [Thread-6] o.s.c.n.e.s.EurekaServiceRegistry [{EurekaServiceRegistry.java} {65}] - Unregistering application ZUUL with eureka with status DOWN
[INFO ] 2019-09-04 14:26:36 [DiscoveryClient-InstanceInfoReplicator-0] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {826}] - DiscoveryClient_ZUUL/10.45.53.191:zuul:-1: registering service...
[INFO ] 2019-09-04 14:26:36 [Thread-6] o.s.c.n.zuul.ZuulFilterInitializer [{ZuulFilterInitializer.java} {79}] - Stopping filter initializer
[INFO ] 2019-09-04 14:26:36 [Thread-6] c.n.u.c.ShutdownEnabledTimer [{ShutdownEnabledTimer.java} {67}] - Shutdown hook removed for: NFLoadBalancer-PingTimer-product
[INFO ] 2019-09-04 14:26:36 [Thread-6] c.n.u.c.ShutdownEnabledTimer [{ShutdownEnabledTimer.java} {72}] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO ] 2019-09-04 14:26:36 [Thread-6] c.n.u.c.ShutdownEnabledTimer [{ShutdownEnabledTimer.java} {67}] - Shutdown hook removed for: NFLoadBalancer-PingTimer-customer
[INFO ] 2019-09-04 14:26:36 [Thread-6] c.n.u.c.ShutdownEnabledTimer [{ShutdownEnabledTimer.java} {72}] - Exception caught (might be ok if at shutdown)
java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82)
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239)
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70)
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:632)
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:883)
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:975)
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:92)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1034)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1027)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1057)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1026)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:945)
[INFO ] 2019-09-04 14:26:36 [Thread-6] o.s.s.c.ThreadPoolTaskExecutor [{ExecutorConfigurationSupport.java} {208}] - Shutting down ExecutorService 'applicationTaskExecutor'
[INFO ] 2019-09-04 14:26:36 [Thread-6] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {888}] - Shutting down DiscoveryClient ...
[INFO ] 2019-09-04 14:26:36 [Thread-6] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {922}] - Unregistering ...
[INFO ] 2019-09-04 14:26:36 [Thread-6] c.netflix.discovery.DiscoveryClient [{DiscoveryClient.java} {911}] - Completed shut down of DiscoveryClient
